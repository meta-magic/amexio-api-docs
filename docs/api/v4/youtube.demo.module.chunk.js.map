{"version":3,"sources":["/codebuild/output/src533988677/src/src/app/enterprise/youtube-player/youtube.demo.component.ts","/codebuild/output/src533988677/src/src/app/enterprise/youtube-player/youtube.demo.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;GAEG;AAC+C;AACf;AA2FnC;IAKE,oCAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,kCAAkC;IAClC,6DAAwB,GAAxB;QAAA,iBAoBC;QAnBC,IAAI,YAAiB,CAAC;QACtB,IAAI,UAAe,CAAC;QAEpB,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7E,YAAY,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7E,UAAU,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC,EAAE,eAAK;QACR,CAAC,EAAE;YACD,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,sDAAsD;IACtD,gDAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAGF,6CAAQ,GAAR,cAAa,CAAC;IA3CF,0BAA0B;QAzFtC,wEAAS,CAAC;YACV,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,spIAoFT;SACD,CAAC;yCAO0B,2DAAI;OALnB,0BAA0B,CA4CtC;IAAD,iCAAC;CAAA;AA5CsC;;;;;;;;;;;;;;;;;;;;;;;;;AC/FvC;;GAEG;AACsC;AACc;AAEa;AACnB;AACJ;AACJ;AACuC;AAEhF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2FAA0B,EAAE;CACpD,CAAC;AAOF;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAL/B,uEAAQ,CAAC;YACR,OAAO,EAAE,CAAC,oEAAY,EAAC,qEAAY,EAAC,iEAAU,EAAC,gFAAkB,EAAC,oFAAsB,EAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACvH,OAAO,EAAE,CAAC,qEAAY,CAAC;YACvB,YAAY,EAAG,CAAC,2FAA0B,CAAC;SAC5C,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;AAEzB,IAAM,gBAAgB,GAAG,CAAC,2FAA0B,CAAC,CAAC","file":"youtube.demo.module.chunk.js","sourcesContent":["/**\n * Created by pratik on 18/1/18.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {Http} from \"@angular/http\";\n\n@Component({\n selector: 'youtube-player',\n template: `\n   <amexio-card header=\"true\">\n     <amexio-header>\n        YouTube Video Player \n     </amexio-header>\n     <amexio-body>\n       <p>A simple configurable of video player.</p>\n       <amexio-tab-view>\n         <amexio-tab title=\"Demo\" active=\"true\">\n           <amexio-card header=\"true\">\n             <amexio-header> Video player </amexio-header>\n             <amexio-body>\n               <amexio-row>\n                 <amexio-column size=\"12\">\n                   <amexio-card header=\"true\">\n                     <amexio-header> Video player without Width </amexio-header>\n                     <amexio-body>\n                       <amexio-ee-youtube-player url=\"https://www.youtube.com/embed/U7elNhHwgBU\"\n                                                 [height]=\"450\">\n\n                       </amexio-ee-youtube-player>\n                     </amexio-body>\n                   </amexio-card>\n\n                 </amexio-column>\n               </amexio-row>\n               <amexio-row>\n                 <amexio-column size=\"12\">\n                   <amexio-card header=\"true\">\n                     <amexio-header> Video player with Width </amexio-header>\n                     <amexio-body>\n                   <amexio-ee-youtube-player url=\"https://www.youtube.com/embed/U7elNhHwgBU\"\n                                             [height]=\"450\" [width]=\"50\">\n\n                   </amexio-ee-youtube-player>\n                     </amexio-body>\n                   </amexio-card>\n\n                 </amexio-column>\n               </amexio-row>\n             </amexio-body>\n           </amexio-card>\n         </amexio-tab>\n         <amexio-tab title=\"API Reference\">\n           <amexio-datagrid title=\"Propeties\" [enable-column-fiter]=\"false\"\n                            [http-method]=\"'get'\"\n                            [http-url]=\"'assets/apireference/enterprise/videoplayer.json'\"\n                            [data-reader]=\"'properties'\"\n                            [enable-data-filter]=\"false\">\n             <amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                       [text]=\"'Name'\"></amexio-data-table-column>\n             <amexio-data-table-column [width]=\"10\" [data-index]=\"'type'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                       [text]=\"'Type'\"></amexio-data-table-column>\n             <amexio-data-table-column [width]=\"10\" [data-index]=\"'default'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                       [text]=\"'Default'\"></amexio-data-table-column>\n             <amexio-data-table-column [width]=\"65\" [data-index]=\"'description'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                       [text]=\"'Description'\"></amexio-data-table-column>\n           </amexio-datagrid>\n\n         </amexio-tab>\n         <amexio-tab title=\"Source\">\n           <div style=\"overflow-y: scroll\">\n           <amexio-vertical-tab-view>\n             <amexio-tab title=\"HTML\" [active]=\"true\">\n               <ng-container *ngIf=\"htmlCode\">\n                 <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                 <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n               </ng-container>\n             </amexio-tab>\n             <amexio-tab title=\"Type Script\">\n               <ng-container *ngIf=\"typeScriptCode\">\n                 <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n               </ng-container>\n             </amexio-tab>\n           </amexio-vertical-tab-view>\n           </div>\n         </amexio-tab>\n         <amexio-tab title=\"Live\">\n         <p align=\"center\">Amexio Sandbox</p>\n         <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-youtube-player?embed=1&file=app/enterprise/youtube-player/youtube.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n         </amexio-tab>\n       </amexio-tab-view>\n     </amexio-body>\n   </amexio-card>\n `\n})\n\nexport class YoutubePlayerDemoComponent implements OnInit {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n\n  constructor(private http: Http) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/enterprise/videoplayer/ee.html').subscribe(data => {\n      responseHtml = data.text();\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/enterprise/videoplayer/ee.text').subscribe(data => {\n      responseTs = data.text();\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n\n ngOnInit() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /codebuild/output/src533988677/src/src/app/enterprise/youtube-player/youtube.demo.component.ts","/**\n * Created by pratik on 18/1/18.\n */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {YoutubePlayerDemoComponent} from \"./youtube.demo.component\";\nimport {SharedModule} from \"../../shared.module\";\nimport {CommonModule} from \"@angular/common\";\nimport {HttpModule} from \"@angular/http\";\nimport {AmexioEnterpriseModule, AmexioWidgetModule} from \"amexio-ng-extensions\";\n\nconst routes: Routes = [\n  { path: '', component: YoutubePlayerDemoComponent },\n];\n\n@NgModule({\n  imports: [SharedModule,CommonModule,HttpModule,AmexioWidgetModule,AmexioEnterpriseModule,RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  declarations : [YoutubePlayerDemoComponent]\n})\nexport class YoutubePlayerModule { }\n\nexport const routedComponents = [YoutubePlayerDemoComponent];\n\n\n\n// WEBPACK FOOTER //\n// /codebuild/output/src533988677/src/src/app/enterprise/youtube-player/youtube.demo.module.ts"],"sourceRoot":"webpack:///"}