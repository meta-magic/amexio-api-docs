{"version":3,"sources":["/home/ubuntu/gitrepos-v4.2/Amexio5API/src/app/data/tree/treewithbadge/treewithbadge.demo.component.ts.TreeWithBadgeDemo.html","/home/ubuntu/gitrepos-v4.2/Amexio5API/src/app/data/tree/treewithbadge/treewithbadge.demo.component.ts","/home/ubuntu/gitrepos-v4.2/Amexio5API/src/app/data/tree/treewithbadge/treewithbadge.demo.module.ts"],"names":[],"mappings":"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","file":"treewithbadge.demo.module.f569dadbc8dcabb2fbb3.chunk.js","sourcesContent":["\n    <amexio-card header=\"true\">\n      <amexio-header>\n         Tree with Badge\n      </amexio-header>\n      <amexio-body>\n        <p>A Simple Expandable Tree component which create Tree View based on standard datasource attached with badge property</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-row>\n              <amexio-column size=\"6\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Simple Tree \n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-treeview [badge]=\"true\" [data-reader]=\"'data'\" [data]=\"treeLocalData\" (nodeClick)=\"getNodeData($event)\">\n                    </amexio-treeview>\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n              <amexio-column size=\"6\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Selected Data \n                  </amexio-header>\n                  <amexio-body>\n                    <pre><code>{{selectedData | json}}</code></pre>\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n            </amexio-row>\n          </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Properties<amexio-treeview>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/tree.json'\"\n                             [data-reader]=\"'properties'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"20\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Version'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"45\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            <amexio-datagrid title=\"Events\" [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/tree.json'\" [data-reader]=\"'events'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"DataSource\">\n                <ng-container *ngIf=\"dataSource\">\n                  <prism-block [code]=\"dataSource\" [language]=\"'json'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n          <p align=\"center\">Amexio Sandbox</p>\n          <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-tree-with-badge?embed=1&file=app/tree/simpletree/simpletree.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n  \n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/gitrepos-v4.2/Amexio5API/src/app/data/tree/treewithbadge/treewithbadge.demo.component.ts.TreeWithBadgeDemo.html","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'treewithbadge-demo', template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n         Tree with Badge\n      </amexio-header>\n      <amexio-body>\n        <p>A Simple Expandable Tree component which create Tree View based on standard datasource attached with badge property</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-row>\n              <amexio-column size=\"6\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Simple Tree \n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-treeview [badge]=\"true\" [data-reader]=\"'data'\" [data]=\"treeLocalData\" (nodeClick)=\"getNodeData($event)\">\n                    </amexio-treeview>\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n              <amexio-column size=\"6\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Selected Data \n                  </amexio-header>\n                  <amexio-body>\n                    <pre><code>{{selectedData | json}}</code></pre>\n                  </amexio-body>\n                </amexio-card>\n              </amexio-column>\n            </amexio-row>\n          </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Properties<amexio-treeview>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/tree.json'\"\n                             [data-reader]=\"'properties'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [width]=\"20\" [data-index]=\"'version'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Version'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"45\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            <amexio-datagrid title=\"Events\" [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/tree.json'\" [data-reader]=\"'events'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"DataSource\">\n                <ng-container *ngIf=\"dataSource\">\n                  <prism-block [code]=\"dataSource\" [language]=\"'json'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n          <p align=\"center\">Amexio Sandbox</p>\n          <iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-tree-with-badge?embed=1&file=app/tree/simpletree/simpletree.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n  `\n})\nexport class TreeWithBadgeDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  dataSource: string;\n  copyMsgArray: any[];\n  selectedData: any;\n  treeLocalData: any;\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n\n    this.treeLocalData = {\n      \"data\": [{\n        \"text\": \"Web App\",\n        \"expand\": true,\n        \"children\": [\n          {\n            \"text\": \"app\",\n            \"expand\": true,\n            \"badge\": 1,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Application.js\",\n              }\n            ]\n          },\n          {\n            \"text\": \"button\",\n            \"expand\": true,\n            \"badge\": 3,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"Button.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Cycle.js\"\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Split.js\"\n              }\n            ]\n          },\n          {\n            \"text\": \"container\",\n            \"expand\": true,\n            \"badge\": 3,\n            \"children\": [\n              {\n                \"leaf\": true,\n                \"text\": \"ButtonGroup.js\",\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Container.js\",\n              },\n              {\n                \"leaf\": true,\n                \"text\": \"Viewport.js\",\n                \"expand\" : true,\n                \"children\":[],\n                \"lazy\":{\n                  \"http-url\":\"data/treeview.json\",\n                  \"http-method\": \"get\"\n                }\n              }\n            ]\n          },\n          {\n            \"text\": \"core\",\n            \"expand\": true,\n            \"badge\": 1,\n            \"children\": [\n              {\n                \"text\": \"dom\",\n                \"expand\": true,\n                \"badge\": 2,\n                \"children\": [\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.form.js\"\n                  },\n                  {\n                    \"leaf\": true,\n                    \"text\": \"Element.static-more.js\"\n                  }\n\n                ]\n              }\n            ]\n          }\n        ]\n      }]\n    };\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/data/tree/treewithbadge/tree.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/data/tree/treewithbadge/tree.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n    this.http.get('assets/data/componentdata/treeviewwithbadge.json',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.dataSource = responseTs;\n    });\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  getNodeData(data: any) {\n    this.selectedData = data;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/gitrepos-v4.2/Amexio5API/src/app/data/tree/treewithbadge/treewithbadge.demo.component.ts","import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule, IconLoaderService} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../../shared.module\";\nimport {TreeWithBadgeDemo} from \"./treewithbadge.demo.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n/**\n * Created by sagar on 11/1/18.\n */\n@NgModule({\n  declarations: [TreeWithBadgeDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: TreeWithBadgeDemo, pathMatch: 'full'\n  }])],\n  providers: [IconLoaderService]\n})\nexport class TreeWithBadgeDemoModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/gitrepos-v4.2/Amexio5API/src/app/data/tree/treewithbadge/treewithbadge.demo.module.ts"],"sourceRoot":"webpack:///"}