{"version":3,"sources":["/home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/theme/theme.component.ts.ThemeComponent.html","/home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/theme/theme.component.ts","/home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/theme/theme.module.ts","/home/ubuntu/gitrepos-v4.3/Amexio5API/node_modules/ngx-cookie-service/cookie-service/cookie.service.js","/home/ubuntu/gitrepos-v4.3/Amexio5API/node_modules/ngx-cookie-service/index.js"],"names":[],"mappings":"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AAG,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC;QACnE,IAAI,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,0BAAwB,CAAC,CAAC;QAC5E,0CAA0C;QAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAC,YAAY,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;IAC9D,CAAC;IAGH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7KkD;AAEnD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wEAAc,EAAE;CACxC,CAAC;AAEF;IAAA;IAM2B,CAAC;IAAD,kBAAC;AAAD,CAAC;;AAErB,IAAM,gBAAgB,GAAG,CAAC,wEAAc,CAAC,CAAC;;;;;;;;;;;ACxBjD;AAAA;AACA;AACA;AAC6B;AACV;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,mDAAmD;AACnD;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD,EAAE,UAAU;AAC5D,oDAAoD,kCAAkC;AACtF;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,4CAA4C;AAC5C,KAAK,gCAAgC,kJAAkC,IAAI;AAC3E,EAAE;AACF,0C;;;;;;;;;;AC5IA;AACA,iC","file":"theme.module.9c0e44946cb2270518d3.chunk.js","sourcesContent":["\n\n    <amexio-image [path]=\"'assets/images/logos/amexio_colors.jpeg'\"[tooltip]=\"'Image'\"></amexio-image>\n\n    <amexio-tab-view  [closable]=\"false\">\n        <amexio-tab title=\"Material Design\" [active]=\"true\">\n            <amexio-row *ngFor=\"let row of mdThemeData\">\n                <amexio-column [size]=\"(12/row.length)\" *ngFor=\"let col of row\">\n                    <div class=\"card-container\">\n                        <header class=\"card-header flex-start\" [ngStyle]=\"{'background-color':col.navBarBGColor, 'color':col.navBarFontColor}\" >\n                            <amexio-label>{{col.themeName}}</amexio-label>\n                        </header>\n                        <div class=\"card-body cardbody\">\n                            <amexio-image [path]=\"'assets/images/theme-icons/'+col.link\"></amexio-image> <br/>\n                            <amexio-label [size]=\"'small'\">Version: {{col.version}}</amexio-label> <br/>\n                            <amexio-label>Style: {{col.style}}</amexio-label> <br/>\n                        </div> \n                        <footer class=\"card-footer flex-end\">\n                            <amexio-button [label]=\"'Test'\" [type]=\"'default'\" (onClick)=\"themeChange(col)\"></amexio-button>\n                        </footer>\n                    </div>\n                </amexio-column>\n            </amexio-row>\n        </amexio-tab>\n        <amexio-tab title=\"Amexio\">\n            <amexio-row *ngFor=\"let row of amexioThemeData\">\n                <amexio-column [size]=\"(12/row.length)\" *ngFor=\"let col of row\">\n                    <div class=\"card-container\">\n                        <header class=\"card-header flex-start\" [ngStyle]=\"{'background-color':col.navBarBGColor, 'color':col.navBarFontColor}\" >\n                            <amexio-label>{{col.themeName}}</amexio-label>\n                        </header>\n                        <div class=\"card-body cardbody\">\n                            <amexio-image [path]=\"'assets/images/theme-icons/'+col.link\"></amexio-image> <br/>\n                            <amexio-label [size]=\"'small'\">Version: {{col.version}}</amexio-label> <br/>\n                            <amexio-label>Style: {{col.style}}</amexio-label> <br/>\n                        </div> \n                    </div>\n                </amexio-column>\n            </amexio-row>\n        </amexio-tab>\n        <amexio-tab title=\"Colors\">\n        Eventually we can apply this attribute [amexio-color] to all components, currently we can apply to progress bar and datapoints. \n        To know more refer the API reference section\n        <amexio-datagrid title=\"Amexio Colors\" [enable-column-fiter]=\"false\"\n        [http-method]=\"'get'\"\n        [http-url]=\"'assets/data/theme/amexio-colours.json'\"\n        [data-reader]=\"'colors'\"\n        [enable-data-filter]=\"false\">\n<amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                   [text]=\"'Name'\"></amexio-data-table-column>\n<amexio-data-table-column [width]=\"15\" [data-index]=\"'css'\" [data-type]=\"'string'\" [hidden]=\"false\"\n[text]=\"'CSS Class Name'\"><ng-template #amexioBodyTmpl let-column let-row=\"row\">\n<span>\n[amexio-color] = '{{row.css}}' </span>\n</ng-template>\n</amexio-data-table-column>\n<amexio-data-table-column [width]=\"15\" [data-index]=\"'BG'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                   [text]=\"'Color'\">\n                   <ng-template #amexioBodyTmpl let-column let-row=\"row\">\n                   <span>\n                    <div [ngStyle]=\"{'background-color':row.BG, 'color' : row.font}\">\n                    This is amexio color {{ row.name }} background <b> {{ row.BG }} </b> with opposite font color <b> {{ row.font }} </b>             \n                    </div>                  \n                   </span>\n                    </ng-template>\n                   </amexio-data-table-column>\n</amexio-datagrid>\n        </amexio-tab>\n        <amexio-tab title=\"Getting Started\">\n        <amexio-label size=\"large\">To install the Amexio Colors:</amexio-label>\n        <amexio-box background-color=\"blue\" border=\"left\" border-color=\"blue\" padding=\"true\">\n            <amexio-label size=\"medium-bold\">$ sudo npm install -g amexio-colors</amexio-label>\n        </amexio-box>\n        <amexio-label size=\"large\">Check the Amexio Colors version:</amexio-label>\n        <amexio-box background-color=\"blue\" border=\"left\" border-color=\"blue\" padding=\"true\" >\n            <amexio-label size=\"medium-bold\"> $ ac </amexio-label><br/>\n            <amexio-label> Amexio Colors v1.0 </amexio-label><br/>\n            <amexio-label> Copyright (c) 2018, MetaMagic Global Inc, NJ, USA </amexio-label><br/>\n            <amexio-label> ..... </amexio-label><br/>\n        </amexio-box>\n        <amexio-label size=\"large\">To Generate Amexio Material Design Themes</amexio-label>\n        \n        <amexio-box background-color=\"blue\" border=\"left\" border-color=\"blue\" padding=\"true\" >       \n        <amexio-label size=\"medium-bold\">$ pwd</amexio-label><br/>\n        <amexio-label size=\"medium\">/home/user/</amexio-label><br/><br/>\n        <amexio-label size=\"medium-bold\">$ mkdir mythemes</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"// Amexio Themes v0.0 \" >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"// Design-Type : Material Design \" >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"// Theme-Version : 4.0 \" >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"army-olive,#4B5320,#708238\" >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"ash-stone-black,#544C4A,#877F7D\" >> Themes-Data.txt</amexio-label><br/>\n        <br />\n        <amexio-label size=\"medium-bold\">$ ac Themes-Data.txt /home/user/mythemes/</amexio-label><br/>\n        </amexio-box>\n        <amexio-label size=\"large\"> Amexio Colors API Documentation</amexio-label>\n        <p>\n        <amexio-label>\n            Checkout the Amexio Colors API Documentation published in </amexio-label>\n            <a href=\"https://meta-magic.github.io/AmexioColors/\" target=\"_blank\">GitHub Pages</a>\n            <br/>\n            <amexio-label>For Testing the Themes Autogenerated by the Amexio Colors Checkout the Amexio</amexio-label>\n            <a href=\"http://api.amexio.tech\" target=\"_blank\">API Site</a>\n        </p>\n            \n        </amexio-tab>\n    </amexio-tab-view>\n\n  \n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/theme/theme.component.ts.ThemeComponent.html","/**\n * Created by sagar on 11/1/18.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport { CookieService } from 'ngx-cookie-service';\n@Component({\n  selector: 'theme-page',\n  template: `\n\n    <amexio-image [path]=\"'assets/images/logos/amexio_colors.jpeg'\"[tooltip]=\"'Image'\"></amexio-image>\n\n    <amexio-tab-view  [closable]=\"false\">\n        <amexio-tab title=\"Material Design\" [active]=\"true\">\n            <amexio-row *ngFor=\"let row of mdThemeData\">\n                <amexio-column [size]=\"(12/row.length)\" *ngFor=\"let col of row\">\n                    <div class=\"card-container\">\n                        <header class=\"card-header flex-start\" [ngStyle]=\"{'background-color':col.navBarBGColor, 'color':col.navBarFontColor}\" >\n                            <amexio-label>{{col.themeName}}</amexio-label>\n                        </header>\n                        <div class=\"card-body cardbody\">\n                            <amexio-image [path]=\"'assets/images/theme-icons/'+col.link\"></amexio-image> <br/>\n                            <amexio-label [size]=\"'small'\">Version: {{col.version}}</amexio-label> <br/>\n                            <amexio-label>Style: {{col.style}}</amexio-label> <br/>\n                        </div> \n                        <footer class=\"card-footer flex-end\">\n                            <amexio-button [label]=\"'Test'\" [type]=\"'default'\" (onClick)=\"themeChange(col)\"></amexio-button>\n                        </footer>\n                    </div>\n                </amexio-column>\n            </amexio-row>\n        </amexio-tab>\n        <amexio-tab title=\"Amexio\">\n            <amexio-row *ngFor=\"let row of amexioThemeData\">\n                <amexio-column [size]=\"(12/row.length)\" *ngFor=\"let col of row\">\n                    <div class=\"card-container\">\n                        <header class=\"card-header flex-start\" [ngStyle]=\"{'background-color':col.navBarBGColor, 'color':col.navBarFontColor}\" >\n                            <amexio-label>{{col.themeName}}</amexio-label>\n                        </header>\n                        <div class=\"card-body cardbody\">\n                            <amexio-image [path]=\"'assets/images/theme-icons/'+col.link\"></amexio-image> <br/>\n                            <amexio-label [size]=\"'small'\">Version: {{col.version}}</amexio-label> <br/>\n                            <amexio-label>Style: {{col.style}}</amexio-label> <br/>\n                        </div> \n                    </div>\n                </amexio-column>\n            </amexio-row>\n        </amexio-tab>\n        <amexio-tab title=\"Colors\">\n        Eventually we can apply this attribute [amexio-color] to all components, currently we can apply to progress bar and datapoints. \n        To know more refer the API reference section\n        <amexio-datagrid title=\"Amexio Colors\" [enable-column-fiter]=\"false\"\n        [http-method]=\"'get'\"\n        [http-url]=\"'assets/data/theme/amexio-colours.json'\"\n        [data-reader]=\"'colors'\"\n        [enable-data-filter]=\"false\">\n<amexio-data-table-column [width]=\"15\" [data-index]=\"'name'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                   [text]=\"'Name'\"></amexio-data-table-column>\n<amexio-data-table-column [width]=\"15\" [data-index]=\"'css'\" [data-type]=\"'string'\" [hidden]=\"false\"\n[text]=\"'CSS Class Name'\"><ng-template #amexioBodyTmpl let-column let-row=\"row\">\n<span>\n[amexio-color] = '{{row.css}}' </span>\n</ng-template>\n</amexio-data-table-column>\n<amexio-data-table-column [width]=\"15\" [data-index]=\"'BG'\" [data-type]=\"'string'\" [hidden]=\"false\"\n                   [text]=\"'Color'\">\n                   <ng-template #amexioBodyTmpl let-column let-row=\"row\">\n                   <span>\n                    <div [ngStyle]=\"{'background-color':row.BG, 'color' : row.font}\">\n                    This is amexio color {{ row.name }} background <b> {{ row.BG }} </b> with opposite font color <b> {{ row.font }} </b>             \n                    </div>                  \n                   </span>\n                    </ng-template>\n                   </amexio-data-table-column>\n</amexio-datagrid>\n        </amexio-tab>\n        <amexio-tab title=\"Getting Started\">\n        <amexio-label size=\"large\">To install the Amexio Colors:</amexio-label>\n        <amexio-box background-color=\"blue\" border=\"left\" border-color=\"blue\" padding=\"true\">\n            <amexio-label size=\"medium-bold\">$ sudo npm install -g amexio-colors</amexio-label>\n        </amexio-box>\n        <amexio-label size=\"large\">Check the Amexio Colors version:</amexio-label>\n        <amexio-box background-color=\"blue\" border=\"left\" border-color=\"blue\" padding=\"true\" >\n            <amexio-label size=\"medium-bold\"> $ ac </amexio-label><br/>\n            <amexio-label> Amexio Colors v1.0 </amexio-label><br/>\n            <amexio-label> Copyright (c) 2018, MetaMagic Global Inc, NJ, USA </amexio-label><br/>\n            <amexio-label> ..... </amexio-label><br/>\n        </amexio-box>\n        <amexio-label size=\"large\">To Generate Amexio Material Design Themes</amexio-label>\n        \n        <amexio-box background-color=\"blue\" border=\"left\" border-color=\"blue\" padding=\"true\" >       \n        <amexio-label size=\"medium-bold\">$ pwd</amexio-label><br/>\n        <amexio-label size=\"medium\">/home/user/</amexio-label><br/><br/>\n        <amexio-label size=\"medium-bold\">$ mkdir mythemes</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"// Amexio Themes v0.0 \" >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"// Design-Type : Material Design \" >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"// Theme-Version : 4.0 \" >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"army-olive,#4B5320,#708238\" >> Themes-Data.txt</amexio-label><br/>\n        <amexio-label size=\"medium-bold\">$ echo \"ash-stone-black,#544C4A,#877F7D\" >> Themes-Data.txt</amexio-label><br/>\n        <br />\n        <amexio-label size=\"medium-bold\">$ ac Themes-Data.txt /home/user/mythemes/</amexio-label><br/>\n        </amexio-box>\n        <amexio-label size=\"large\"> Amexio Colors API Documentation</amexio-label>\n        <p>\n        <amexio-label>\n            Checkout the Amexio Colors API Documentation published in </amexio-label>\n            <a href=\"https://meta-magic.github.io/AmexioColors/\" target=\"_blank\">GitHub Pages</a>\n            <br/>\n            <amexio-label>For Testing the Themes Autogenerated by the Amexio Colors Checkout the Amexio</amexio-label>\n            <a href=\"http://api.amexio.tech\" target=\"_blank\">API Site</a>\n        </p>\n            \n        </amexio-tab>\n    </amexio-tab-view>\n\n  `\n})\nexport class ThemeComponent implements OnInit {\n  \n  mdThemeData : any;\n  amexioThemeData : any;\n  hasThemeInit : boolean = false;\n  newThemePath : string;\n\n  constructor(private http: HttpClient, private cookieService: CookieService) {\n  }\n\n\n  ngOnInit() {\n\n    let response:any;\n\n    this.http.get('assets/data/theme/theme-api-showcase.json',{responseType: 'json'}).subscribe(data => {\n        response = data;\n      }, error => {\n      }, () => {\n        this.mdThemeData = response;\n        \n      });\n\n      this.http.get('assets/data/theme/theme-api-showcase-amexio.json',{responseType: 'json'}).subscribe(data => {\n        response = data;\n      }, error => {\n      }, () => {\n        this.amexioThemeData = response;\n        \n      });      \n  }\n\n  \n  addNewTheme(newTheme: any,existingTheme : any) {\n    let linkEl = document.createElement('link');\n    linkEl.onload = ()=>{\n      this.removeExistingTheme(existingTheme);\n    \n    };\n    linkEl.setAttribute('rel', 'stylesheet');\n    linkEl.id = 'themeid';\n    linkEl.href = newTheme;\n    document.head.appendChild(linkEl);\n  }\n\n  //removed old theme css\n  removeExistingTheme(keyList: any) {\n    if (keyList != null && keyList && keyList.length != 0) {\n      for (let i=0; i<keyList.length; i++) {\n        let key = keyList[i];\n        if (key.id == 'themeid') {\n          document.head.removeChild(key);\n        }\n      }\n    }\n  }  \n  \n  themeChange(theme: any) {\n    this.newThemePath = 'assets/themes/' + theme.themeCssFile + '.css';\n    let currentTheme = document.head.querySelectorAll(`link[rel=\"stylesheet\"]`);\n    // this.removeExistingTheme(currentTheme);\n    this.addNewTheme(this.newThemePath,currentTheme);\n    this.cookieService.set('theme_name_v4', theme.themeCssFile);\n  }\n\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/theme/theme.component.ts","/**\n * Created by Ketan on 16/1/18.\n */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {CookieService} from 'ngx-cookie-service';\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { ThemeComponent } from './theme.component';\n\nconst routes: Routes = [\n  { path: '', component: ThemeComponent },\n];\n\n@NgModule({\n  imports: [CommonModule,HttpClientModule,FormsModule,AmexioWidgetModule,RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  declarations : [ThemeComponent],\n  providers : [CookieService]\n})\nexport class ThemeModule { }\n\nexport const routedComponents = [ThemeComponent];\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/theme/theme.module.ts","// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nvar CookieService = (function () {\n    function CookieService(\n        // The type `Document` may not be used here. Although a fix is on its way,\n        // we will go with `any` for now to support Angular 2.4.x projects.\n        // Issue: https://github.com/angular/angular/issues/12631\n        // Fix: https://github.com/angular/angular/pull/14894\n        document) {\n        this.document = document;\n        // To avoid issues with server side prerendering, check if `document` is defined.\n        this.documentIsAccessible = document !== undefined;\n    }\n    /**\n     * @param name Cookie name\n     * @returns {boolean}\n     */\n    CookieService.prototype.check = function (name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        var regExp = this.getCookieRegExp(name);\n        var exists = regExp.test(this.document.cookie);\n        return exists;\n    };\n    /**\n     * @param name Cookie name\n     * @returns {any}\n     */\n    CookieService.prototype.get = function (name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            var regExp = this.getCookieRegExp(name);\n            var result = regExp.exec(this.document.cookie);\n            return decodeURIComponent(result[1]);\n        }\n        else {\n            return '';\n        }\n    };\n    /**\n     * @returns {}\n     */\n    CookieService.prototype.getAll = function () {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        var cookies = {};\n        var document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            var split = document.cookie.split(';');\n            for (var i = 0; i < split.length; i += 1) {\n                var currentCookie = split[i].split('=');\n                currentCookie[0] = currentCookie[0].replace(/^ /, '');\n                cookies[decodeURIComponent(currentCookie[0])] = decodeURIComponent(currentCookie[1]);\n            }\n        }\n        return cookies;\n    };\n    /**\n     * @param name    Cookie name\n     * @param value   Cookie value\n     * @param expires Number of days until the cookies expires or an actual `Date`\n     * @param path    Cookie path\n     * @param domain  Cookie domain\n     * @param secure  Secure flag\n     */\n    CookieService.prototype.set = function (name, value, expires, path, domain, secure) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        var cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        if (expires) {\n            if (typeof expires === 'number') {\n                var dateExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + expires.toUTCString() + ';';\n            }\n        }\n        if (path) {\n            cookieString += 'path=' + path + ';';\n        }\n        if (domain) {\n            cookieString += 'domain=' + domain + ';';\n        }\n        if (secure) {\n            cookieString += 'secure;';\n        }\n        this.document.cookie = cookieString;\n    };\n    /**\n     * @param name   Cookie name\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    CookieService.prototype.delete = function (name, path, domain) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        this.set(name, '', -1, path, domain);\n    };\n    /**\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    CookieService.prototype.deleteAll = function (path, domain) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        var cookies = this.getAll();\n        for (var cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain);\n            }\n        }\n    };\n    /**\n     * @param name Cookie name\n     * @returns {RegExp}\n     */\n    CookieService.prototype.getCookieRegExp = function (name) {\n        var escapedName = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/ig, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    };\n    return CookieService;\n}());\nexport { CookieService };\nCookieService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nCookieService.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n//# sourceMappingURL=cookie.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/gitrepos-v4.3/Amexio5API/node_modules/ngx-cookie-service/cookie-service/cookie.service.js\n// module id = ../../../../ngx-cookie-service/cookie-service/cookie.service.js\n// module chunks = theme.module","export * from './cookie-service/cookie.service';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ubuntu/gitrepos-v4.3/Amexio5API/node_modules/ngx-cookie-service/index.js\n// module id = ../../../../ngx-cookie-service/index.js\n// module chunks = theme.module"],"sourceRoot":"webpack:///"}