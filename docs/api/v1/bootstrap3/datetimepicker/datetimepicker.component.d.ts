import { EventEmitter, AfterViewInit, OnDestroy, SimpleChanges, OnChanges } from '@angular/core';
import { ControlValueAccessor, NgControl } from '@angular/forms';
export declare class DateTimeComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, OnChanges {
    dateChange: EventEmitter<Date>;
    timepickerOptions: any;
    datepickerOptions: any;
    hasClearButton: boolean;
    readonly: boolean;
    required: boolean;
    tabindex: string;
    date: Date;
    dateModel: string;
    timeModel: string;
    datepicker: any;
    timepicker: any;
    idDatePicker: string;
    idTimePicker: string;
    onChange: (_: any) => void;
    onTouched: () => void;
    readonly tabindexAttr: string | undefined;
    constructor(ngControl: NgControl);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
    checkEmptyValue(e: any): void;
    clearModels(): void;
    showTimepicker(): void;
    showDatepicker(): void;
    private init();
    private updateModel(date);
    private updateDatepicker(date?);
    private pad(value);
}
