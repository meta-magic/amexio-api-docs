
Text Field Directive:

 <input-text [fieldlabel]="'First Name'" name ="firstName"
    [(ngModel)]="userFormModal.firstName" [emptyText]="'First name'"
    [fieldName]="'firstName'"
    [allowBlank]="true" [errorMsg] ="'Please enter first name'"
    [minLength]="5" [minErrorMsg]="'Minimum 5 char required'"
    [maxLength]="10"  [maxErrorMsg]="'Maximum 10 char allowed'">
 </input-text>

Text Area Directive:

<input-text-area [fieldlabel]="'Address'" name ="address"
     [(ngModel)]="userFormModal.address" [emptyText]="'Address'"
     [fieldName]="'address'"
     [allowBlank]="true" [errorMsg] ="'Please enter address'"
     [noOfCols]="50"
     [noOfrows]="5">
</input-text-area>

Password Directive:

<input-password [fieldlabel]="'Password'" name ="userPassword"
    [(ngModel)]="userFormModal.userPassword" [emptyText]="'Please enter password'"
    [fieldName]="'userPassword'"
    [allowBlank]="true" [errorMsg] ="'Please enter password'"
    [minLength]="5" [minErrorMsg]="'Minimum 5 char required'"
    [maxLength]="10"  [maxErrorMsg]="'Maximum 10 char allowed'">
</input-password>

Number Directive:

<input-number [fieldlabel]="'Total Amount'" name ="totalAmount"
   [(ngModel)]="userFormModal.totalAmount" [emptyText]="'Please enter total amount'"
   [fieldName]="'totalAmount'"
   [allowBlank]="true" [errorMsg] ="'Please enter total amount'"
   [minValue]="5" [minErrorMsg]="'Minimum is 5 '"
   [maxValue]="10"  [maxErrorMsg]="'Maximum is 10'">
</input-number>

Email Directive:

<input-email [fieldlabel]="'Email Id'" name ="userEmail"
     [(ngModel)]="userFormModal.userEmail" [emptyText]="'Email Id'"
     [fieldName]="'userEmail'"
     [allowBlank]="true" [errorMsg] ="'Please enter email id'">
</input-email>

Hidden Directive :
 <input-hidden name ="accountId" [(ngModel)]="userFormModal.accountId" ></input-hidden>


Drop Down (Combo-Box)
<drop-down [fieldlabel]="'Country'" name ="country"
           [(ngModel)]="userFormModal.country" [emptyText]="'Please select country'"
           [fieldName]="'country'"
           [allowBlank]="true" [errorMsg] ="'Please select country'"
           [dataReader]="'response.data'"
           [httpUrl]="'data/country.json'"
           [httpMethod]="'get'"
           [displayField]="'countryName'"
           [valueField]="'countryCode1'"
           (selectedValue)="setSelectedCountry($event)">
</drop-down>

Check-Group
<check-group [fieldlabel]="'Country'" name ="country"
         [fieldName]="'country'"
         [dataReader]="'response.data'"
         [httpUrl]="'data/country.json'"
         [httpMethod]="'get'"
         [displayField]="'countryName'"
         [valueField]="'countryCode1'"
         (selectedValue)="setSelectedCountry($event)">
</check-group>

Radio-Group
<radio-group [fieldlabel]="'Country'" name ="country"
         [fieldName]="'country'"
         [dataReader]="'response.data'"
         [httpUrl]="'data/country.json'"
         [httpMethod]="'get'"
         [displayField]="'countryName'"
         [valueField]="'countryCode1'"
         (selectedValue)="setSelectedCountry($event)">
</radio-group>

 Component File For Demo

 import {OnInit, ViewChildren, Component} from "@angular/core";
 import {InputText} from "../components/inputtext/inputtext";
 import {InputTextArea} from "../components/inputtextarea/inputtextarea";
 import {InputPassword} from "../components/inputpassword/inputpassword";
 import {InputNumber} from "../components/inputnumber/inputnumber";
 import {InputEmail} from "../components/inputemail/inputemail";
 import {Behaviour} from "../components/behaviour";
 import {ComponentValidator} from "../components/component.validator";
 import {SourceCodeService} from "./sourcecodeservice";



 @Component({
     selector: 'demo-formfields',
     templateUrl: "./app/sample/demoformfields.html",
     providers: [SourceCodeService]
 })

 export class DemoFormFields implements  OnInit{

     userFormModal : UserModal;

     @ViewChildren(InputText)
     private inputTextComponent : InputText;

     @ViewChildren(InputTextArea)
     private inputTextAreaComponent : InputTextArea;

     @ViewChildren(InputPassword)
     private inputPasswordComponent : InputPassword;

     @ViewChildren(InputNumber)
     private inputNumberComponent : InputNumber

     @ViewChildren(InputEmail)
     private inputEmailComponent : InputEmail;

     private behaviour : Behaviour;

     private componentValidator : ComponentValidator;

     constructor(private sourceCodeService : SourceCodeService){
         this.userFormModal = new UserModal();
         this.componentValidator = new ComponentValidator();
         this.behaviour = new Behaviour();
     }

     ngAfterViewInit(){
     }

     ngOnInit(){
         $('[data-toggle="popover"]').popover();
     }

     submitData(){
         var validateComponents = [];
         validateComponents.push(this.inputTextComponent);
         validateComponents.push(this.inputTextAreaComponent);
         validateComponents.push(this.inputPasswordComponent);
         validateComponents.push(this.inputNumberComponent);
         validateComponents.push(this.inputEmailComponent);
         var hasErrors =  this.componentValidator.validateAll(validateComponents);
         console.log(hasErrors);

     }

     disableAll(){
         this.behaviour.setDisabled(this.inputTextComponent,'lastName', true);
         this.behaviour.setDisabled(this.inputTextComponent,'firstName', true);
         this.behaviour.setDisabled(this.inputTextAreaComponent,'address', true);
         this.behaviour.setDisabled(this.inputPasswordComponent,'userPassword', true);
         this.behaviour.setDisabled(this.inputNumberComponent,'totalAmount', true);
         this.behaviour.setDisabled(this.inputEmailComponent,'userEmail', true);
     }

     enableAll(){
         this.behaviour.setDisabled(this.inputTextComponent,'lastName', false);
         this.behaviour.setDisabled(this.inputTextComponent,'firstName', false);
         this.behaviour.setDisabled(this.inputTextAreaComponent,'address', false);
         this.behaviour.setDisabled(this.inputPasswordComponent,'userPassword', false);
         this.behaviour.setDisabled(this.inputNumberComponent,'totalAmount', false);
         this.behaviour.setDisabled(this.inputEmailComponent,'userEmail', false);
     }

    setSelectedCountry(data:any){
        console.log(data);
    }

 }



 export class UserModal
 {
     firstName   : string;
     lastName : string;
     address : string;
     userPassword : string;
     totalAmount : number;
     accountId : string;
     userEmail : string;

     constructor(){
         this.accountId = "1212121212";
     }

     toJson(){
         var modelJson = {};
         modelJson['firstName'] = this.firstName;
     }
 }
