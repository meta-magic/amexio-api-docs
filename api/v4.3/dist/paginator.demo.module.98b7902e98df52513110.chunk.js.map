{"version":3,"sources":["/home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/data/paginator/paginator.demo.module.ts","/home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/data/paginator/paginator.demo.ts.PaginatorDemo.html","/home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/data/paginator/paginator.demo.ts"],"names":[],"mappings":"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","file":"paginator.demo.module.98b7902e98df52513110.chunk.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {AmexioWidgetModule} from \"amexio-ng-extensions\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {SharedModule} from \"../../shared.module\";\nimport {PaginatorDemo} from \"./paginator.demo\";\nimport {HttpClientModule} from \"@angular/common/http\";\n/**\n * Created by sagar on 11/1/18.\n */\n@NgModule({\n  declarations: [PaginatorDemo],\n  imports: [CommonModule, FormsModule, HttpClientModule,SharedModule, AmexioWidgetModule, RouterModule.forChild([{\n    path: '', component: PaginatorDemo, pathMatch: 'full'\n  }])],\n  providers: []\n})\nexport class PaginatorDemoModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/data/paginator/paginator.demo.module.ts","\n    <amexio-card header=\"true\">\n      <amexio-header>\n         Paginator \n      </amexio-header>\n      <amexio-body>\n        <p>Paginator is a generic widget to display content in paged format.</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-row>\n              <amexio-column size=\"12\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Paginator with page size 10 \n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-paginator [pages]=\"50\" \n                                      [rows]=\"10\"\n                                      (onPageChange)=\"loadPageData($event)\">\n                    </amexio-paginator>\n                    <p>Current active page :  {{currentPage}}</p>\n                  </amexio-body>\n                </amexio-card>\n\n              </amexio-column>\n            </amexio-row>\n          <amexio-row>\n              <amexio-column size=\"12\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Paginator with page size 5 \n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-paginator [pages]=\"30\"\n                                      [rows]=\"5\">\n                    </amexio-paginator>\n                  </amexio-body>\n                </amexio-card>\n\n              </amexio-column>\n            </amexio-row>\n          </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Properties<amexio-paginator>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/paginator.json'\"\n                             [data-reader]=\"'properties'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"15\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            <amexio-datagrid title=\"Events\" [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/paginator.json'\" [data-reader]=\"'events'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"70\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n                     <p align=\"center\">Amexio Sandbox</p>\n<iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-paginator?embed=1&file=app/data/paginator/paginator.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n  \n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/data/paginator/paginator.demo.ts.PaginatorDemo.html","/**\n * Created by sagar on 9/1/18.\n */\n\nimport {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'paginator-demo', template: `\n    <amexio-card header=\"true\">\n      <amexio-header>\n         Paginator \n      </amexio-header>\n      <amexio-body>\n        <p>Paginator is a generic widget to display content in paged format.</p>\n        <amexio-tab-view>\n          <amexio-tab title=\"Demo\" active=\"true\">\n            <amexio-row>\n              <amexio-column size=\"12\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Paginator with page size 10 \n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-paginator [pages]=\"50\" \n                                      [rows]=\"10\"\n                                      (onPageChange)=\"loadPageData($event)\">\n                    </amexio-paginator>\n                    <p>Current active page :  {{currentPage}}</p>\n                  </amexio-body>\n                </amexio-card>\n\n              </amexio-column>\n            </amexio-row>\n          <amexio-row>\n              <amexio-column size=\"12\">\n                <amexio-card [header]=\"true\">\n                  <amexio-header>\n                     Paginator with page size 5 \n                  </amexio-header>\n                  <amexio-body>\n                    <amexio-paginator [pages]=\"30\"\n                                      [rows]=\"5\">\n                    </amexio-paginator>\n                  </amexio-body>\n                </amexio-card>\n\n              </amexio-column>\n            </amexio-row>\n          </amexio-tab>\n          <amexio-tab title=\"API Reference\">\n            <amexio-datagrid title=\"Properties<amexio-paginator>\" [enable-column-fiter]=\"false\"\n                             [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/paginator.json'\"\n                             [data-reader]=\"'properties'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"15\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'type'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Type'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'default'\" [width]=\"10\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Default'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"65\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n            <br>\n            <amexio-datagrid title=\"Events\" [http-method]=\"'get'\"\n                             [http-url]=\"'assets/apireference/data/paginator.json'\" [data-reader]=\"'events'\"\n                             [enable-data-filter]=\"false\">\n              <amexio-data-table-column [data-index]=\"'name'\" [width]=\"20\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Name'\"></amexio-data-table-column>\n              <amexio-data-table-column [data-index]=\"'description'\" [width]=\"70\" [data-type]=\"'string'\" [hidden]=\"false\"\n                                        [text]=\"'Description'\"></amexio-data-table-column>\n            </amexio-datagrid>\n\n          </amexio-tab>\n          <amexio-tab title=\"Source\">\n            <div style=\"overflow-y: scroll\">\n            <amexio-vertical-tab-view>\n              <amexio-tab title=\"HTML\" [active]=\"true\">\n                <ng-container *ngIf=\"htmlCode\">\n                  <!--<clip-copy [htmlCode]=\"htmlCode\" (onClick)=\"onCopyClick()\"></clip-copy>-->\n                  <prism-block [code]=\"htmlCode\" [language]=\"'html'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n              <amexio-tab title=\"Type Script\">\n                <ng-container *ngIf=\"typeScriptCode\">\n                  <prism-block [code]=\"typeScriptCode\" [language]=\"'typescript'\"></prism-block>\n                </ng-container>\n              </amexio-tab>\n            </amexio-vertical-tab-view>\n            </div>\n          </amexio-tab>\n          <amexio-tab title=\"Live\">\n                     <p align=\"center\">Amexio Sandbox</p>\n<iframe style=\"width: 100%; height: 600px\" src=\"https://stackblitz.com/edit/amexio-v4-paginator?embed=1&file=app/data/paginator/paginator.demo.html\" frameborder=\"0\" allowfullscren=\"allowfullscren\"></iframe>\n          </amexio-tab>\n        </amexio-tab-view>\n      </amexio-body>\n    </amexio-card>\n  `\n})\nexport class PaginatorDemo {\n  htmlCode: string;\n  typeScriptCode: string;\n  copyMsgArray: any[];\n  currentPage: number;\n  constructor(private http: HttpClient) {\n    this.getHtmlAndTypeScriptCode();\n  }\n\n  //TO LOAD HTML AND TYPESCRIPT CODE\n  getHtmlAndTypeScriptCode() {\n    let responseHtml: any;\n    let responseTs: any;\n\n    //HTML FILE\n    this.http.get('assets/data/code/data/paginator/paginator.html',{responseType: 'text'}).subscribe(data => {\n      responseHtml = data;\n    }, error => {\n    }, () => {\n      this.htmlCode = responseHtml;\n    });\n\n    //TS FILE\n    this.http.get('assets/data/code/data/paginator/paginator.text',{responseType: 'text'}).subscribe(data => {\n      responseTs = data;\n    }, error => {\n    }, () => {\n      this.typeScriptCode = responseTs;\n    });\n\n  }\n\n  //THIS METHOD USED FOR COPY THE HTML & TYPESCRIPT CODE\n  onCopyClick() {\n    if (this.copyMsgArray.length >= 1) {\n      this.copyMsgArray = [];\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    } else {\n      this.copyMsgArray.push({'msg': 'Code Copied', 'type': 'info'});\n    }\n  }\n\n  loadPageData(pageNumber:number) {\n   this.currentPage = pageNumber;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ubuntu/gitrepos-v4.3/Amexio5API/src/app/data/paginator/paginator.demo.ts"],"sourceRoot":"webpack:///"}